/*Project Euler
Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
using namespace std;

bool isEven(int n)
{
    if(n % 2 == 0)
    {
        return true;
    }
    else
    {
        return false;
    }
}

int main()
{
    int n, t1 = 0, t2 = 1, nextTerm = 0, sum = 0;
    cout << "Please input your n: ";
    cin >> n;
    cout << "Fibonacci Sequence: " << t1 << " " << t2 << " ";
    nextTerm = t1+t2;

    while(nextTerm < n)
    {
        if(isEven(nextTerm) == true)
        {
            cout << nextTerm << " ";
            sum = nextTerm + sum;
        }
        t1 = t2;
        t2 = nextTerm;
        nextTerm = t1+t2;

    }
    cout << endl << "Completed, the total sum was: " << sum;
    return 0;
}